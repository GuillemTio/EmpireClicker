local isPieDestroyed = false
function init(self)
	--print("My address is:", msg.url())
end

function final(self)
	-- Add finalization code here
	-- Learn more: https://defold.com/manuals/script/
	-- Remove this function if not needed
end

function update(self, dt)
	-- Add update code here
	-- Learn more: https://defold.com/manuals/script/
	-- Remove this function if not needed
end

function on_message(self, message_id, message, sender)

	if message_id == hash("updateCoins") then
		local coinsNode = gui.get_node("CoinsNum")
		gui.set_text(coinsNode, message.coinsAmount)
	end
	if not isPieDestroyed then
		if message_id == hash("updateHousePie") then
			local pieNode = gui.get_node("BuyHouse")
			local piePercentage = (message.coinsAmount / message.housePrice) * 100
			if piePercentage >= 100 then
				piePercentage = 100
			end
			gui.set_fill_angle(pieNode, (360 * piePercentage) / 100)
		end
		if message_id == hash("changePie") then
			local pieNode = gui.get_node("BuyHouse")
			if(message.needsToBeDeleted)then
				gui.delete_node(pieNode)
			    isPieDestroyed = true;
			else
				gui.set_position(pieNode, message.piePosition)
			end
		end
	end
end

function on_input(self, action_id, action)
	-- Add input-handling code here. The game object this script is attached to
	-- must have acquired input focus:
	--
	--    msg.post(".", "acquire_input_focus")
	--
	-- All mapped input bindings will be received. Mouse and touch input will
	-- be received regardless of where on the screen it happened.
	-- Learn more: https://defold.com/manuals/input/
	-- Remove this function if not needed
end

function on_reload(self)
	-- Add reload-handling code here
	-- Learn more: https://defold.com/manuals/hot-reload/
	-- Remove this function if not needed
end
